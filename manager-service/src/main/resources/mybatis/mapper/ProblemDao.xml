<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.cloudli.managerservice.dao.ProblemDao">

    <select id="getCount" resultType="java.lang.Long">
        select count(problem_id)
        from problem
    </select>

    <select id="getAll" resultType="top.cloudli.managerservice.model.Problem">
        <choose>
            <when test="userId != null">
                select p.*, result
                from problem p
                left join (select user_id, problem_id, min(result) result
                from judge_result
                where user_id = #{userId}
                group by user_id, problem_id) jr
                on p.problem_id = jr.problem_id
            </when>
            <otherwise>
                select *
                from problem
            </otherwise>
        </choose>
        limit #{start}, #{limit}
    </select>

    <select id="getEnableCount" resultType="java.lang.Long">
        select count(problem_id)
        from problem
        where enable = true
    </select>

    <select id="getEnable" resultType="top.cloudli.managerservice.model.Problem">
        <choose>
            <when test="userId != null">
                select p.*, result
                from problem p
                left join (select user_id, problem_id, min(result) result
                from judge_result
                where user_id = #{userId}
                group by user_id, problem_id) jr
                on p.problem_id = jr.problem_id
            </when>
            <otherwise>
                select problem_id, title, enable, category, create_at
                from problem
            </otherwise>
        </choose>
        where enable = true
        limit #{start}, #{limit}
    </select>

    <select id="getSingle" resultType="top.cloudli.managerservice.model.Problem">
        select *
        from problem
        where problem_id = #{problemId}
    </select>

    <select id="getSingleEnable" resultType="top.cloudli.managerservice.model.Problem">
        select *
        from problem
        where enable = true
          and problem_id = #{problemId}
    </select>

    <select id="getSearchCount" resultType="java.lang.Long">
        select count(problem_id)
        from problem
        where enable = true
          and title like #{title}
    </select>

    <select id="searchByTitle" resultType="top.cloudli.managerservice.model.Problem">
        <choose>
            <when test="userId != null">
                select p.*, result
                from problem p
                left join (select user_id, problem_id, min(result) result
                from judge_result
                where user_id = #{userId}
                group by user_id, problem_id) jr
                on p.problem_id = jr.problem_id
            </when>
            <otherwise>
                select problem_id, title, enable, category, create_at
                from problem
            </otherwise>
        </choose>
        <if test="pro != true">
            where enable = true
        </if>
        and title like #{title}
        limit #{start}, #{limit}
    </select>

    <insert id="add" parameterType="top.cloudli.managerservice.model.Problem">
        insert into problem(title, description, input, output, sample_input, sample_output, enable, score)
            value (#{title}, #{description}, #{input}, #{output}, #{sampleInput}, #{sampleOutput}, #{enable}, #{score})
    </insert>

    <update id="update" parameterType="top.cloudli.managerservice.model.Problem">
        update problem
        set title         = #{title},
            description   = #{description},
            input         = #{input},
            output        = #{output},
            sample_input  = #{sampleInput},
            sample_output = #{sampleOutput},
            enable        = #{enable},
            score         = #{score},
            category      = #{category}
        where problem_id = #{problemId}
    </update>

    <delete id="delete">
        delete
        from problem
        where problem_id = #{problemId}
    </delete>

    <update id="updateEnable">
        update problem
        set enable = #{enable}
        where problem_id = #{problemId}
    </update>
</mapper>